manifest.json

{
  "name": "Image Grabber",
  "description": "Extract all images from current web page",
  "version": "1.0",

  // обязательно 3 версия
  "manifest_version": 3,

  "icons": {
    "48": "icons/icon48.png"
  },

  "action": {
    // дефолтная иконка, если нужная из icons не найдена
  "default_icon": "icons/icon48.png"
  // Подсказка или заголовок появляется, когда пользователь удерживает указатель мыши над значком расширения на панели инструментов
  default_title
  },

  // список требуемых разрешений
  "permissions": [],
  // Чтобы запускать действия в фоне
  "background": {}
}


chrome.tabs - Chrome Tabs API. 
Будет использоваться для доступа к активной вкладке браузера.

chrome.scripting - Chrome Scripting API. 
Будет использоваться для внедрения кода JavaScript на web-страницу 
активной вкладки и для исполнения этого кода в контексте этой страницы.

activeTab - разрешение для получения доступа к текущей вкладке браузера.

scripting - разрешение для получения доступа к Chrome Scripting API 
для исполнения скриптов в контексте Web-страницы, открытой в браузере.

Получение информации об активной вкладке браузера
Для получения информации о вкладках браузера используется функция chrome.tabs.query, которая определена следующим образом:

//* 
chrome.tabs.query(queryObject,callback)
queryObject - объект запроса в котором указываются параметры поиска нужных вкладок.

callback - функция обратного вызова, которая выполняется после выполнения этого запроса. 
В нее передается массив tabs, содержащий все найденные вкладки, соответствующие критерию запроса. 
Каждый элемент этого массива - это объект типа Tab, содержащий информацию о вкладке, 
включая ее уникальный идентификатор. Этот идентификатор будет использоваться для исполнения Javascript-кода на этой вкладке.

//*
 Для внедрения скрипта в страницу 
Web-браузера используется функция executeScript, определенная следующим образом:
chrome.scripting.executeScript(injectSpec,callback)

//*
Открытие новой вкладки браузера из расширения
Открыть новую вкладку браузера можно с помощью функции chrome.tabs.create из Chrome Tabs API, которая определена следующим образом:

chrome.tabs.create(createProperties, callback)
createProperties - объект с параметрами, говорящими Chrome что открыть в новой вкладке и как. 
В частности, в параметре url указывается путь к странице, которую нужно открыть.

callback - функция обратного вызова, которая исполняется после того как вкладка открылась. 
В качестве единственного параметра ей передается ссылка на созданную вкладку. Это объект Tab, 
содержащий различные методы и свойства созданной вкладки, включая ее уникальный идентификатор.

//*
Для отправки сообщений используется функция

chrome.tabs.sendMessage(tabId, message, responseFn)
tabId - идентификатор вкладки браузера, в которую нужно передать сообщение.

message - произвольный объект Javascript. В данном случае это будет массив путей к изображениям.

responseFn - функция обратного вызова, которая выполнится после того, как принимающая сторона ответит на полученное сообщение. 
Эта функция получает один лишь аргумент responseObject. Это произвольный объект 
Javascript, который принимающая сторона может отправить вместе с ответом. (Об отправке ответов будет рассказано чуть позже)